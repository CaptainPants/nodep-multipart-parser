{
  "version": 3,
  "sources": ["../../../src/headers/parseHeaders.test.ts"],
  "sourcesContent": ["import { describe, expect, test } from '@jest/globals';\n\nimport { parseHeaders } from './parseHeaders';\n\ndescribe('parseHeaders', () => {\n    test('test1', () => {\n        const headers = `Content-Disposition: form-data; name=\"file2\"; filename=\"a.html\"\nContent-Type: text/html`.replace(/\\n/g, '\\r\\n');\n\n        const res = parseHeaders({ headerString: headers }).headers;\n\n        expect(res).toHaveLength(2);\n        expect(res[0]!.name).toEqual('content-disposition');\n        expect(res[0]!.value).toEqual('form-data; name=\"file2\"; filename=\"a.html\"');\n        expect(res[1]!.name).toEqual('content-type');\n        expect(res[1]!.value).toEqual('text/html');\n    });\n\n    test('obs-fold', () => {\n        // note the content-disposition header is over two lines\n        const headers = `Content-Disposition: form-data; name=\"file2\";\n filename=\"a.html\"\nContent-Type: text/html`.replace(/\\n/g, '\\r\\n');\n\n        const res = parseHeaders({ headerString: headers }).headers;\n\n        expect(res).toHaveLength(2);\n        expect(res[0]!.name).toEqual('content-disposition');\n        expect(res[0]!.value).toEqual('form-data; name=\"file2\";  filename=\"a.html\"');\n        expect(res[1]!.name).toEqual('content-type');\n        expect(res[1]!.value).toEqual('text/html');\n    });\n});"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA,qBAAuC;AAEvC,0BAA6B;AAE7B,6BAAS,gBAAgB,MAAM;AAC3B,2BAAK,SAAS,MAAM;AAChB,UAAM,UAAU;AAAA,yBACC,QAAQ,OAAO;AAEhC,UAAM,MAAM,sCAAa,EAAE,cAAc,WAAW;AAEpD,+BAAO,KAAK,aAAa;AACzB,+BAAO,IAAI,GAAI,MAAM,QAAQ;AAC7B,+BAAO,IAAI,GAAI,OAAO,QAAQ;AAC9B,+BAAO,IAAI,GAAI,MAAM,QAAQ;AAC7B,+BAAO,IAAI,GAAI,OAAO,QAAQ;AAAA;AAGlC,2BAAK,YAAY,MAAM;AAEnB,UAAM,UAAU;AAAA;AAAA,yBAEC,QAAQ,OAAO;AAEhC,UAAM,MAAM,sCAAa,EAAE,cAAc,WAAW;AAEpD,+BAAO,KAAK,aAAa;AACzB,+BAAO,IAAI,GAAI,MAAM,QAAQ;AAC7B,+BAAO,IAAI,GAAI,OAAO,QAAQ;AAC9B,+BAAO,IAAI,GAAI,MAAM,QAAQ;AAC7B,+BAAO,IAAI,GAAI,OAAO,QAAQ;AAAA;AAAA;",
  "names": []
}
